{"id":"js-and-the-dom/scriptsone.js","dependencies":[{"name":"/Users/hugghaadmin/Documents/Projects/frontendwebdev/package.json","includedInParent":true,"mtime":1553773227284}],"generated":{"js":"//welcome and overview vid\n// Thinking globally vid \n//What is the DOM\n//document object model - representation of a webpage that javascript can use\n//map of a webpage that js can use\n//live entity - changes that js makes to the dom alter the webpage \n//webpage as a tree-like structure \n//recap - global scope - window object \n//document, property of the window object\n//---------------------------------------------------------------------------\n// a simple example vid \n// const myHeading = document.getElementById('myHeading');\n// myHeading.addEventListener('click', () => {\n//     myHeading.style.color = 'red';\n// });\n//---------------------------------------------------------------------------\n//select a page element by it's id \n//selection is a way to identify an element for the browser, so the browser can find it and make it available for us to do something with it using js \n// const myHeading = document.getElementById('myHeading');\n// const myButton = document.getElementById('myButton');\n// const myTextInput = document.getElementById('myTextInput');\n// myButton.addEventListener('click', ()=>{\n//     myHeading.style.color = myTextInput.value;\n// });\n//---------------------------------------------------------------------------\n//select all elements of a particular type video \n//using document.getElementsByTagName()\n// might want to select all of the items inside a list to make a todo list \n//document.getElementsByTagName() - returns a collection of elements\n// const myList = document.getElementsByTagName('li');\n// for(let i = 0; i < myList.length; i +=1){\n//     myList[i].style.color = 'purple';\n// }\n// myList[2].style.color = 'purple';\n//---------------------------------------------------------------------------\n//Selecting elements with the same class name \n// using document.getElementsByClassName() \n// const myList = document.getElementsByTagName('li');\n// for(let i =0; i < myList; i += 1){\n//     myList[i].style.color = 'purple';\n// }\n// const errorNotPurple = document.getElementsByClassName('error-not-purple');\n// for(let i = 0; i < errorNotPurple.length; i += 1){\n//     myList[i].style.color = 'red';\n// }\n//---------------------------------------------------------------------------\n// Using CSS queries to select page elements \n// document.querySelector()\n//document.querySelectorAll()\n// document.querySelectorAll('li'); - returns all elements that match the selector\n// document.querySelector('li') - returns the first one that matches \n//how to select by type = \n// id =  #   document.querySelectorAll('#myHeading');\n// class = .    document.querySelectorAll('.error-not-purple');\n// html attribute = []  document.querySelector('[title=random]');\n// css psuedo class selector nth - zebra stripe the list\n// const evens = document.querySelectorAll('li:nth-child(even)');\n// for(let i = 0; i < evens.length; i += 1){\n//     evens[i].style.backgroundColor = 'lightgray';\n// }\n//css pesudo classes \n//every other list item has a light gray background \n//---------------------------------------------------------------------------\n// practice selecting DOM elements \n//---------------------------------------------------------------------------\n// getting and setting text with textContent and innerHTML \n// textContent method - use this to read or set text values of elements \n// innerHTML method - can read and alter elements on a webpage \n// const input = document.querySelector('input');\n// const p = document.querySelector('p.description');\n// const button = document.querySelector('button');\n// button.addEventListener('click', () => {\n//     p.textContent = input.value + ':';\n// });\n// const input = document.querySelector('input');\n// const p = document.querySelector('p.description');\n// const button = document.querySelector('button');\n// button.addEventListener('click', () => {\n//     p.innerHTML = input.value + ':';\n// });\n//---------------------------------------------------------------------------\n//changing element atributes \n// element.attribute \n// const input = document.querySelector('input');\n//input.type   - //text \\\n// const toggleList = document.getElementById(\"toggle-list\");\n// const listDiv = document.querySelector('.list');\n// const descriptionInput = document.querySelector('input.description');\n// const descriptionP = document.querySelector('p.description');\n// const descriptionButton = document.querySelector('button.description');\n// const addItemInput = document.querySelector('input.addItemInput');\n// const addItemButton = document.querySelector('button.addItemButton');\n// const removeItemButton = document.querySelector('button.removeItemButton');\n// toggleList.addEventListener('click', () => {\n//     if (listDiv.style.display == 'none') {\n//         toggleList.textContent = 'Hide list';\n//         listDiv.style.display = 'block';\n//     } else {\n//         toggleList.textContent = 'Show list';\n//         listDiv.style.display = 'none';\n//     }\n// });\n// descriptionButton.addEventListener('click', () => {\n//     descriptionP.innerHTML = descriptionInput.value + ':';\n//     descriptionInput.value = '';\n// });\n// addItemButton.addEventListener('click', () => {\n//     let ul = document.getElementsByTagName('ul')[0];\n//     let li = document.createElement('li');\n//     li.textContent = addItemInput.value;\n//     ul.appendChild(li);\n//     addItemInput.value = '';\n// });\n// removeItemButton.addEventListener('click', () => {\n//     let ul = document.getElementsByTagName('ul')[0];\n//     let li = document.querySelector('li:last-child');\n//     ul.removeChild('li');\n// });\n// title attribute has been set \n//---------------------------------------------------------------------------\n// Creating new DOM elements \n// how to insert content into the DOM - appending nodes vid .appendChild() method \n// nodes belong to the dom, elements - HTML \n// eg <ul> parent, <li> child \n//-------------------------\n//Removing nodes vid \n//removing elements from the page  e.g - when a user wants to delete a note/photo \n// .removeChild() method takes the arguement of the elemenet you want to remove \n//-------------------------\n// practice \n//what is an event \n//something you do on the webpage, clicking, scrolling, moving through the page \n//when you interact with the page you may trigger events \n// function as parameters vid \n// function say(something){\n//     console.log(something);\n// }\n// function exec(func, arg){\n//     func(arg);\n//}\n//2 parameters ar very different data types, one is a function and the other is a string, but both can be passed as arguements \n// exec(say, \"hi there!\");\n//passing a function into a function \n// we can oass a function directly into another function \n// function exec(func, arg){\n//     func(arg);\n// }\n// exec((something) => {\n//     console.log(something);\n// }, 'great'); //anonymous function \n//-------------------------\n// Delaying execution with setTimeout();\n// window.setTimeout((something) => {\n//     console.log(something);\n// }, 3000, 'greetings, everyone!');\n//method expects a function to be the first parameter \n//-------------------------\n// listening for events with addEventListener();\n//making a site interactive:\n// selecting elements on a page\n// manipulating elements \n//listening for user actions \n//the event target can be an element, a document or window object. \n// event type, callback function (event handler)","map":{"mappings":[{"generated":{"line":1,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":2,"column":0}},{"generated":{"line":2,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":4,"column":0}},{"generated":{"line":3,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":6,"column":0}},{"generated":{"line":4,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":8,"column":0}},{"generated":{"line":5,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":9,"column":0}},{"generated":{"line":6,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":10,"column":0}},{"generated":{"line":7,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":12,"column":0}},{"generated":{"line":8,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":14,"column":0}},{"generated":{"line":9,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":15,"column":0}},{"generated":{"line":10,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":16,"column":0}},{"generated":{"line":11,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":18,"column":0}},{"generated":{"line":12,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":20,"column":0}},{"generated":{"line":13,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":22,"column":0}},{"generated":{"line":14,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":23,"column":0}},{"generated":{"line":15,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":24,"column":0}},{"generated":{"line":16,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":26,"column":0}},{"generated":{"line":17,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":27,"column":0}},{"generated":{"line":18,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":29,"column":0}},{"generated":{"line":19,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":31,"column":0}},{"generated":{"line":20,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":32,"column":0}},{"generated":{"line":21,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":33,"column":0}},{"generated":{"line":22,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":35,"column":0}},{"generated":{"line":23,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":36,"column":0}},{"generated":{"line":24,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":37,"column":0}},{"generated":{"line":25,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":40,"column":0}},{"generated":{"line":26,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":42,"column":0}},{"generated":{"line":27,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":44,"column":0}},{"generated":{"line":28,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":46,"column":0}},{"generated":{"line":29,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":48,"column":0}},{"generated":{"line":30,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":50,"column":0}},{"generated":{"line":31,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":52,"column":0}},{"generated":{"line":32,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":53,"column":0}},{"generated":{"line":33,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":54,"column":0}},{"generated":{"line":34,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":55,"column":0}},{"generated":{"line":35,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":57,"column":0}},{"generated":{"line":36,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":59,"column":0}},{"generated":{"line":37,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":61,"column":0}},{"generated":{"line":38,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":63,"column":0}},{"generated":{"line":39,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":65,"column":0}},{"generated":{"line":40,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":66,"column":0}},{"generated":{"line":41,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":67,"column":0}},{"generated":{"line":42,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":69,"column":0}},{"generated":{"line":43,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":71,"column":0}},{"generated":{"line":44,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":72,"column":0}},{"generated":{"line":45,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":73,"column":0}},{"generated":{"line":46,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":75,"column":0}},{"generated":{"line":47,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":76,"column":0}},{"generated":{"line":48,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":78,"column":0}},{"generated":{"line":49,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":79,"column":0}},{"generated":{"line":50,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":81,"column":0}},{"generated":{"line":51,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":82,"column":0}},{"generated":{"line":52,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":84,"column":0}},{"generated":{"line":53,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":85,"column":0}},{"generated":{"line":54,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":86,"column":0}},{"generated":{"line":55,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":87,"column":0}},{"generated":{"line":56,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":89,"column":0}},{"generated":{"line":57,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":91,"column":0}},{"generated":{"line":58,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":93,"column":0}},{"generated":{"line":59,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":94,"column":0}},{"generated":{"line":60,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":95,"column":0}},{"generated":{"line":61,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":98,"column":0}},{"generated":{"line":62,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":100,"column":0}},{"generated":{"line":63,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":101,"column":0}},{"generated":{"line":64,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":103,"column":0}},{"generated":{"line":65,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":105,"column":0}},{"generated":{"line":66,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":107,"column":0}},{"generated":{"line":67,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":109,"column":0}},{"generated":{"line":68,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":111,"column":0}},{"generated":{"line":69,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":114,"column":0}},{"generated":{"line":70,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":115,"column":0}},{"generated":{"line":71,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":116,"column":0}},{"generated":{"line":72,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":118,"column":0}},{"generated":{"line":73,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":119,"column":0}},{"generated":{"line":74,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":120,"column":0}},{"generated":{"line":75,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":123,"column":0}},{"generated":{"line":76,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":124,"column":0}},{"generated":{"line":77,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":125,"column":0}},{"generated":{"line":78,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":127,"column":0}},{"generated":{"line":79,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":128,"column":0}},{"generated":{"line":80,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":129,"column":0}},{"generated":{"line":81,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":131,"column":0}},{"generated":{"line":82,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":133,"column":0}},{"generated":{"line":83,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":135,"column":0}},{"generated":{"line":84,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":137,"column":0}},{"generated":{"line":85,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":138,"column":0}},{"generated":{"line":86,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":140,"column":0}},{"generated":{"line":87,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":141,"column":0}},{"generated":{"line":88,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":142,"column":0}},{"generated":{"line":89,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":143,"column":0}},{"generated":{"line":90,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":144,"column":0}},{"generated":{"line":91,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":145,"column":0}},{"generated":{"line":92,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":146,"column":0}},{"generated":{"line":93,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":147,"column":0}},{"generated":{"line":94,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":149,"column":0}},{"generated":{"line":95,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":150,"column":0}},{"generated":{"line":96,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":151,"column":0}},{"generated":{"line":97,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":152,"column":0}},{"generated":{"line":98,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":153,"column":0}},{"generated":{"line":99,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":154,"column":0}},{"generated":{"line":100,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":155,"column":0}},{"generated":{"line":101,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":156,"column":0}},{"generated":{"line":102,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":157,"column":0}},{"generated":{"line":103,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":160,"column":0}},{"generated":{"line":104,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":161,"column":0}},{"generated":{"line":105,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":162,"column":0}},{"generated":{"line":106,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":163,"column":0}},{"generated":{"line":107,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":165,"column":0}},{"generated":{"line":108,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":166,"column":0}},{"generated":{"line":109,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":167,"column":0}},{"generated":{"line":110,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":168,"column":0}},{"generated":{"line":111,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":169,"column":0}},{"generated":{"line":112,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":170,"column":0}},{"generated":{"line":113,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":171,"column":0}},{"generated":{"line":114,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":173,"column":0}},{"generated":{"line":115,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":174,"column":0}},{"generated":{"line":116,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":175,"column":0}},{"generated":{"line":117,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":176,"column":0}},{"generated":{"line":118,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":177,"column":0}},{"generated":{"line":119,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":181,"column":0}},{"generated":{"line":120,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":182,"column":0}},{"generated":{"line":121,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":184,"column":0}},{"generated":{"line":122,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":186,"column":0}},{"generated":{"line":123,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":188,"column":0}},{"generated":{"line":124,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":190,"column":0}},{"generated":{"line":125,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":192,"column":0}},{"generated":{"line":126,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":194,"column":0}},{"generated":{"line":127,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":196,"column":0}},{"generated":{"line":128,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":198,"column":0}},{"generated":{"line":129,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":200,"column":0}},{"generated":{"line":130,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":202,"column":0}},{"generated":{"line":131,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":203,"column":0}},{"generated":{"line":132,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":205,"column":0}},{"generated":{"line":133,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":207,"column":0}},{"generated":{"line":134,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":209,"column":0}},{"generated":{"line":135,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":211,"column":0}},{"generated":{"line":136,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":212,"column":0}},{"generated":{"line":137,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":213,"column":0}},{"generated":{"line":138,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":215,"column":0}},{"generated":{"line":139,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":216,"column":0}},{"generated":{"line":140,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":217,"column":0}},{"generated":{"line":141,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":218,"column":0}},{"generated":{"line":142,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":220,"column":0}},{"generated":{"line":143,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":222,"column":0}},{"generated":{"line":144,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":226,"column":0}},{"generated":{"line":145,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":228,"column":0}},{"generated":{"line":146,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":229,"column":0}},{"generated":{"line":147,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":230,"column":0}},{"generated":{"line":148,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":232,"column":0}},{"generated":{"line":149,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":233,"column":0}},{"generated":{"line":150,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":234,"column":0}},{"generated":{"line":151,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":236,"column":0}},{"generated":{"line":152,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":238,"column":0}},{"generated":{"line":153,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":240,"column":0}},{"generated":{"line":154,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":241,"column":0}},{"generated":{"line":155,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":242,"column":0}},{"generated":{"line":156,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":244,"column":0}},{"generated":{"line":157,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":246,"column":0}},{"generated":{"line":158,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":248,"column":0}},{"generated":{"line":159,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":249,"column":0}},{"generated":{"line":160,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":250,"column":0}},{"generated":{"line":161,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":251,"column":0}},{"generated":{"line":162,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":252,"column":0}},{"generated":{"line":163,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":254,"column":0}},{"generated":{"line":164,"column":0},"source":"js-and-the-dom/scriptsone.js","original":{"line":258,"column":0}}],"sources":{"js-and-the-dom/scriptsone.js":"\n//welcome and overview vid\n\n// Thinking globally vid \n\n//What is the DOM\n\n//document object model - representation of a webpage that javascript can use\n//map of a webpage that js can use\n//live entity - changes that js makes to the dom alter the webpage \n\n//webpage as a tree-like structure \n\n//recap - global scope - window object \n//document, property of the window object\n//---------------------------------------------------------------------------\n\n// a simple example vid \n\n// const myHeading = document.getElementById('myHeading');\n\n// myHeading.addEventListener('click', () => {\n//     myHeading.style.color = 'red';\n// });\n\n//---------------------------------------------------------------------------\n//select a page element by it's id \n\n//selection is a way to identify an element for the browser, so the browser can find it and make it available for us to do something with it using js \n\n// const myHeading = document.getElementById('myHeading');\n// const myButton = document.getElementById('myButton');\n// const myTextInput = document.getElementById('myTextInput');\n\n// myButton.addEventListener('click', ()=>{\n//     myHeading.style.color = myTextInput.value;\n// });\n\n\n//---------------------------------------------------------------------------\n\n//select all elements of a particular type video \n\n//using document.getElementsByTagName()\n\n// might want to select all of the items inside a list to make a todo list \n\n//document.getElementsByTagName() - returns a collection of elements\n\n// const myList = document.getElementsByTagName('li');\n\n// for(let i = 0; i < myList.length; i +=1){\n//     myList[i].style.color = 'purple';\n// }\n// myList[2].style.color = 'purple';\n\n//---------------------------------------------------------------------------\n\n//Selecting elements with the same class name \n\n// using document.getElementsByClassName() \n\n// const myList = document.getElementsByTagName('li');\n\n// for(let i =0; i < myList; i += 1){\n//     myList[i].style.color = 'purple';\n// }\n\n// const errorNotPurple = document.getElementsByClassName('error-not-purple');\n\n// for(let i = 0; i < errorNotPurple.length; i += 1){\n//     myList[i].style.color = 'red';\n// }\n\n//---------------------------------------------------------------------------\n// Using CSS queries to select page elements \n\n// document.querySelector()\n//document.querySelectorAll()\n\n// document.querySelectorAll('li'); - returns all elements that match the selector\n// document.querySelector('li') - returns the first one that matches \n\n//how to select by type = \n// id =  #   document.querySelectorAll('#myHeading');\n// class = .    document.querySelectorAll('.error-not-purple');\n// html attribute = []  document.querySelector('[title=random]');\n\n// css psuedo class selector nth - zebra stripe the list\n\n// const evens = document.querySelectorAll('li:nth-child(even)');\n\n// for(let i = 0; i < evens.length; i += 1){\n//     evens[i].style.backgroundColor = 'lightgray';\n// }\n\n\n//css pesudo classes \n\n//every other list item has a light gray background \n//---------------------------------------------------------------------------\n\n// practice selecting DOM elements \n\n//---------------------------------------------------------------------------\n\n// getting and setting text with textContent and innerHTML \n\n// textContent method - use this to read or set text values of elements \n\n// innerHTML method - can read and alter elements on a webpage \n\n\n// const input = document.querySelector('input');\n// const p = document.querySelector('p.description');\n// const button = document.querySelector('button');\n\n// button.addEventListener('click', () => {\n//     p.textContent = input.value + ':';\n// });\n\n\n// const input = document.querySelector('input');\n// const p = document.querySelector('p.description');\n// const button = document.querySelector('button');\n\n// button.addEventListener('click', () => {\n//     p.innerHTML = input.value + ':';\n// });\n\n//---------------------------------------------------------------------------\n\n//changing element atributes \n\n// element.attribute \n\n// const input = document.querySelector('input');\n//input.type   - //text \\\n\n// const toggleList = document.getElementById(\"toggle-list\");\n// const listDiv = document.querySelector('.list');\n// const descriptionInput = document.querySelector('input.description');\n// const descriptionP = document.querySelector('p.description');\n// const descriptionButton = document.querySelector('button.description');\n// const addItemInput = document.querySelector('input.addItemInput');\n// const addItemButton = document.querySelector('button.addItemButton');\n// const removeItemButton = document.querySelector('button.removeItemButton');\n\n// toggleList.addEventListener('click', () => {\n//     if (listDiv.style.display == 'none') {\n//         toggleList.textContent = 'Hide list';\n//         listDiv.style.display = 'block';\n//     } else {\n//         toggleList.textContent = 'Show list';\n//         listDiv.style.display = 'none';\n//     }\n// });\n\n\n// descriptionButton.addEventListener('click', () => {\n//     descriptionP.innerHTML = descriptionInput.value + ':';\n//     descriptionInput.value = '';\n// });\n\n// addItemButton.addEventListener('click', () => {\n//     let ul = document.getElementsByTagName('ul')[0];\n//     let li = document.createElement('li');\n//     li.textContent = addItemInput.value;\n//     ul.appendChild(li);\n//     addItemInput.value = '';\n// });\n\n// removeItemButton.addEventListener('click', () => {\n//     let ul = document.getElementsByTagName('ul')[0];\n//     let li = document.querySelector('li:last-child');\n//     ul.removeChild('li');\n// });\n\n\n\n// title attribute has been set \n//---------------------------------------------------------------------------\n\n// Creating new DOM elements \n\n// how to insert content into the DOM - appending nodes vid .appendChild() method \n\n// nodes belong to the dom, elements - HTML \n\n// eg <ul> parent, <li> child \n\n//-------------------------\n\n//Removing nodes vid \n\n//removing elements from the page  e.g - when a user wants to delete a note/photo \n\n// .removeChild() method takes the arguement of the elemenet you want to remove \n\n//-------------------------\n\n// practice \n//what is an event \n\n//something you do on the webpage, clicking, scrolling, moving through the page \n\n//when you interact with the page you may trigger events \n\n// function as parameters vid \n\n// function say(something){\n//     console.log(something);\n// }\n\n// function exec(func, arg){\n//     func(arg);\n//}\n//2 parameters ar very different data types, one is a function and the other is a string, but both can be passed as arguements \n\n// exec(say, \"hi there!\");\n\n//passing a function into a function \n\n\n\n// we can oass a function directly into another function \n\n// function exec(func, arg){\n//     func(arg);\n// }\n\n// exec((something) => {\n//     console.log(something);\n// }, 'great'); //anonymous function \n\n//-------------------------\n\n// Delaying execution with setTimeout();\n\n// window.setTimeout((something) => {\n//     console.log(something);\n// }, 3000, 'greetings, everyone!');\n\n//method expects a function to be the first parameter \n\n//-------------------------\n\n// listening for events with addEventListener();\n//making a site interactive:\n// selecting elements on a page\n// manipulating elements \n//listening for user actions \n\n//the event target can be an element, a document or window object. \n\n\n\n// event type, callback function (event handler) \n\n"},"lineCount":null}},"hash":"9087741e1f545a28a867f0aa4d427a4e","cacheData":{"env":{}}}