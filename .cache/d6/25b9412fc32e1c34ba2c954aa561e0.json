{"id":"js-loops-arrays-obects/scripts.js","dependencies":[{"name":"/Users/hugghaadmin/Documents/Projects/frontendwebdev/package.json","includedInParent":true,"mtime":1553773227284}],"generated":{"js":"// Introducing loops, arrays and objects vid\n//What are loops vid\n// function randomNumber(upper){\n//     return Math.floor(Math.random()* upper) +1;\n// }\n// var counter = 0;\n// while (counter < 10000) {  //test condition \n//     var randNum = randomNumber(6);\n//     document.write(randNum + ' ');\n//     counter += 1;\n// }\n//----------------------------------------------------------------------------------------------\n// A closer look at loop conditions \n// var counter = 0;\n// while (counter < 100){\n//     console.log(counter);\n//     counter +=1;\n// }\n// var upper = 10000;\n// var randomNumber = getRandomNumber(upper);\n// var guess;\n// var attempts = 0;\n// function getRandomNumber(upper){\n//     return Math.floor(Math.random() * upper) + 1;\n// }\n// while (guess !== randomNumber){\n//     guess = getRandomNumber(upper);\n//     attempts += 1;\n//     console.log(\"The random number is \" + randomNumber + \", and the guess was \" + guess);\n//     if (guess == randomNumber){\n//         alert(\"It took \" + attempts + \" attempts for the computer to guess the number!\");\n//     }\n// }\n// if the test condition is true at the beginning the loop won't run \n// break condition allows you to exit the loop \n//----------------------------------------------------------------------------------------------\n// do while loops \n// do {\n// } while ()\n// do it over and over again as long as the condition is true \n// difference between this and while loop - always executes the code block at least once, because the condition is tested after the loop\n// while loop: condition tested at beginning\n// do while: condition tested at the end \n// var randomNumber = getRandomNumber(10);\n// var guess;\n// var guessCount = 0;\n// var correctGuess = false; \n// function getRandomNumber(upper){\n//     var num = Math.floor(Math.random()* upper) + 1;\n//     return num;\n// }\n// do {\n//     guess= prompt(\"i'm thinking of a number between 1 and 10\");\n//     guessCount += 1;\n//     if (parseInt(guess) === randomNumber) {\n//     correctGuess = true;\n// }\n// } while (! correctGuess)  // not operator \n//     alert(\"you got it!\");\n//----------------------------------------------------------------------------------------------\n// For loops \n// used for actions that need to run a particular number of times\n// commonly used with arrays \n// var counter = 0;\n// while (counter < 10){\n//     document.write(counter);\n//     counter += 1;\n// }\n// // This is the same as \n// for (var counter = 0; counter < 10; counter +=1){\n//     document.write(counter);\n// }\n// declare the variable, condition, result \n// for (var i = 11; i < 500; i += 2){\n//     console.log(i);\n// }\n// fast way to write loops \n// var html = ''; \n// for (var i = 1; i <= 10; i += 1){\n//     html += i + i;\n// }\n// console.log(html);\n//----------------------------------------------------------------------------------------------\n// Exiting loops - break statement \n// var randomNumber = getRandomNumber(10);\n// var guess;\n// var guessCount = 0;\n// var correctGuess = false;\n// function getRandomNumber( upper ) {\n//   var num = Math.floor(Math.random() * upper) + 1; \n//   return num;\n// }\n// while(guessCount < 10){\n//   guess = prompt('I am thinking of a number between 1 and 10. What is it?');\n//   guessCount += 1;\n//   if (parseInt(guess) === randomNumber) {\n//     correctGuess = true;\n//     break; // stops an infinite loop \n//   }  \n// }\n// if (correctGuess){ \n// document.write('<h1>You guessed the number!</h1>');\n// document.write('It took you ' + guessCount + ' tries to guess the number ' + randomNumber);\n// } else {\n//     document.write(\"you suck\");\n// }\n//----------------------------------------------------------------------------------------------\n// The refactor challenge \n// DRY -don't repeat yourself \n// var html = '';\n// var red;\n// var green;\n// var blue;\n// var rgbColor;\n// var counter = 0;\n// while (counter < 10){\n// red = Math.floor(Math.random() * 256 );\n// green = Math.floor(Math.random() * 256 );\n// blue = Math.floor(Math.random() * 256 );\n// rgbColor = 'rgb(' + red + ',' + green + ',' + blue + ')';\n// html += '<div style=\"background-color:' + rgbColor + '\"></div>';\n// counter += 1;\n// }\n// document.write(html);\n// the refactor challenge solution vid - could have used a for loop","map":{"mappings":[{"generated":{"line":1,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":4,"column":0}},{"generated":{"line":3,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":7,"column":0}},{"generated":{"line":4,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":8,"column":0}},{"generated":{"line":5,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":9,"column":0}},{"generated":{"line":6,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":10,"column":0}},{"generated":{"line":7,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":11,"column":0}},{"generated":{"line":8,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":12,"column":0}},{"generated":{"line":9,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":13,"column":0}},{"generated":{"line":10,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":14,"column":0}},{"generated":{"line":11,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":16,"column":0}},{"generated":{"line":12,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":20,"column":0}},{"generated":{"line":13,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":22,"column":0}},{"generated":{"line":14,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":24,"column":0}},{"generated":{"line":15,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":25,"column":0}},{"generated":{"line":16,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":26,"column":0}},{"generated":{"line":17,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":27,"column":0}},{"generated":{"line":18,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":28,"column":0}},{"generated":{"line":19,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":30,"column":0}},{"generated":{"line":20,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":31,"column":0}},{"generated":{"line":21,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":32,"column":0}},{"generated":{"line":22,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":33,"column":0}},{"generated":{"line":23,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":35,"column":0}},{"generated":{"line":24,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":36,"column":0}},{"generated":{"line":25,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":37,"column":0}},{"generated":{"line":26,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":39,"column":0}},{"generated":{"line":27,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":40,"column":0}},{"generated":{"line":28,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":41,"column":0}},{"generated":{"line":29,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":42,"column":0}},{"generated":{"line":30,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":43,"column":0}},{"generated":{"line":31,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":44,"column":0}},{"generated":{"line":32,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":45,"column":0}},{"generated":{"line":33,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":46,"column":0}},{"generated":{"line":34,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":48,"column":0}},{"generated":{"line":35,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":49,"column":0}},{"generated":{"line":36,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":52,"column":0}},{"generated":{"line":37,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":54,"column":0}},{"generated":{"line":38,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":56,"column":0}},{"generated":{"line":39,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":58,"column":0}},{"generated":{"line":40,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":60,"column":0}},{"generated":{"line":41,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":61,"column":0}},{"generated":{"line":42,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":62,"column":0}},{"generated":{"line":43,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":63,"column":0}},{"generated":{"line":44,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":65,"column":0}},{"generated":{"line":45,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":66,"column":0}},{"generated":{"line":46,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":67,"column":0}},{"generated":{"line":47,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":68,"column":0}},{"generated":{"line":48,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":70,"column":0}},{"generated":{"line":49,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":71,"column":0}},{"generated":{"line":50,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":72,"column":0}},{"generated":{"line":51,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":73,"column":0}},{"generated":{"line":52,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":75,"column":0}},{"generated":{"line":53,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":76,"column":0}},{"generated":{"line":54,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":77,"column":0}},{"generated":{"line":55,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":78,"column":0}},{"generated":{"line":56,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":79,"column":0}},{"generated":{"line":57,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":80,"column":0}},{"generated":{"line":58,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":82,"column":0}},{"generated":{"line":59,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":83,"column":0}},{"generated":{"line":60,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":85,"column":0}},{"generated":{"line":61,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":87,"column":0}},{"generated":{"line":62,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":89,"column":0}},{"generated":{"line":63,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":90,"column":0}},{"generated":{"line":64,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":93,"column":0}},{"generated":{"line":65,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":95,"column":0}},{"generated":{"line":66,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":96,"column":0}},{"generated":{"line":67,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":97,"column":0}},{"generated":{"line":68,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":98,"column":0}},{"generated":{"line":69,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":99,"column":0}},{"generated":{"line":70,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":101,"column":0}},{"generated":{"line":71,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":102,"column":0}},{"generated":{"line":72,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":103,"column":0}},{"generated":{"line":73,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":105,"column":0}},{"generated":{"line":74,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":107,"column":0}},{"generated":{"line":75,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":108,"column":0}},{"generated":{"line":76,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":109,"column":0}},{"generated":{"line":77,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":110,"column":0}},{"generated":{"line":78,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":113,"column":0}},{"generated":{"line":79,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":114,"column":0}},{"generated":{"line":80,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":115,"column":0}},{"generated":{"line":81,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":116,"column":0}},{"generated":{"line":82,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":117,"column":0}},{"generated":{"line":83,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":121,"column":0}},{"generated":{"line":84,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":123,"column":0}},{"generated":{"line":85,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":125,"column":0}},{"generated":{"line":86,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":126,"column":0}},{"generated":{"line":87,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":127,"column":0}},{"generated":{"line":88,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":128,"column":0}},{"generated":{"line":89,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":130,"column":0}},{"generated":{"line":90,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":131,"column":0}},{"generated":{"line":91,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":132,"column":0}},{"generated":{"line":92,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":133,"column":0}},{"generated":{"line":93,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":135,"column":0}},{"generated":{"line":94,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":136,"column":0}},{"generated":{"line":95,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":137,"column":0}},{"generated":{"line":96,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":138,"column":0}},{"generated":{"line":97,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":139,"column":0}},{"generated":{"line":98,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":140,"column":0}},{"generated":{"line":99,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":141,"column":0}},{"generated":{"line":100,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":142,"column":0}},{"generated":{"line":101,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":143,"column":0}},{"generated":{"line":102,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":144,"column":0}},{"generated":{"line":103,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":145,"column":0}},{"generated":{"line":104,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":146,"column":0}},{"generated":{"line":105,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":147,"column":0}},{"generated":{"line":106,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":148,"column":0}},{"generated":{"line":107,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":151,"column":0}},{"generated":{"line":108,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":154,"column":0}},{"generated":{"line":109,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":156,"column":0}},{"generated":{"line":110,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":158,"column":0}},{"generated":{"line":111,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":159,"column":0}},{"generated":{"line":112,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":160,"column":0}},{"generated":{"line":113,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":161,"column":0}},{"generated":{"line":114,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":162,"column":0}},{"generated":{"line":115,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":163,"column":0}},{"generated":{"line":116,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":165,"column":0}},{"generated":{"line":117,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":167,"column":0}},{"generated":{"line":118,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":168,"column":0}},{"generated":{"line":119,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":169,"column":0}},{"generated":{"line":120,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":170,"column":0}},{"generated":{"line":121,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":171,"column":0}},{"generated":{"line":122,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":172,"column":0}},{"generated":{"line":123,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":173,"column":0}},{"generated":{"line":124,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":175,"column":0}},{"generated":{"line":125,"column":0},"source":"js-loops-arrays-obects/scripts.js","original":{"line":177,"column":0}}],"sources":{"js-loops-arrays-obects/scripts.js":"// Introducing loops, arrays and objects vid\n\n\n//What are loops vid\n\n\n// function randomNumber(upper){\n//     return Math.floor(Math.random()* upper) +1;\n// }\n// var counter = 0;\n// while (counter < 10000) {  //test condition \n//     var randNum = randomNumber(6);\n//     document.write(randNum + ' ');\n//     counter += 1;\n\n// }\n\n\n\n//----------------------------------------------------------------------------------------------\n\n// A closer look at loop conditions \n\n// var counter = 0;\n// while (counter < 100){\n//     console.log(counter);\n//     counter +=1;\n// }\n\n// var upper = 10000;\n// var randomNumber = getRandomNumber(upper);\n// var guess;\n// var attempts = 0;\n\n// function getRandomNumber(upper){\n//     return Math.floor(Math.random() * upper) + 1;\n// }\n\n// while (guess !== randomNumber){\n//     guess = getRandomNumber(upper);\n//     attempts += 1;\n//     console.log(\"The random number is \" + randomNumber + \", and the guess was \" + guess);\n//     if (guess == randomNumber){\n//         alert(\"It took \" + attempts + \" attempts for the computer to guess the number!\");\n//     }\n// }\n\n// if the test condition is true at the beginning the loop won't run \n// break condition allows you to exit the loop \n\n\n//----------------------------------------------------------------------------------------------\n\n// do while loops \n\n// do {\n\n// } while ()\n\n// do it over and over again as long as the condition is true \n// difference between this and while loop - always executes the code block at least once, because the condition is tested after the loop\n// while loop: condition tested at beginning\n// do while: condition tested at the end \n\n// var randomNumber = getRandomNumber(10);\n// var guess;\n// var guessCount = 0;\n// var correctGuess = false; \n\n// function getRandomNumber(upper){\n//     var num = Math.floor(Math.random()* upper) + 1;\n//     return num;\n// }\n\n// do {\n//     guess= prompt(\"i'm thinking of a number between 1 and 10\");\n//     guessCount += 1;\n//     if (parseInt(guess) === randomNumber) {\n//     correctGuess = true;\n// }\n\n// } while (! correctGuess)  // not operator \n//     alert(\"you got it!\");\n\n//----------------------------------------------------------------------------------------------\n\n// For loops \n\n// used for actions that need to run a particular number of times\n// commonly used with arrays \n\n\n// var counter = 0;\n\n// while (counter < 10){\n//     document.write(counter);\n//     counter += 1;\n// }\n// // This is the same as \n\n// for (var counter = 0; counter < 10; counter +=1){\n//     document.write(counter);\n// }\n\n// declare the variable, condition, result \n\n// for (var i = 11; i < 500; i += 2){\n//     console.log(i);\n// }\n// fast way to write loops \n\n\n// var html = ''; \n// for (var i = 1; i <= 10; i += 1){\n//     html += i + i;\n// }\n// console.log(html);\n\n\n\n//----------------------------------------------------------------------------------------------\n\n// Exiting loops - break statement \n\n// var randomNumber = getRandomNumber(10);\n// var guess;\n// var guessCount = 0;\n// var correctGuess = false;\n\n// function getRandomNumber( upper ) {\n//   var num = Math.floor(Math.random() * upper) + 1; \n//   return num;\n// }\n\n// while(guessCount < 10){\n//   guess = prompt('I am thinking of a number between 1 and 10. What is it?');\n//   guessCount += 1;\n//   if (parseInt(guess) === randomNumber) {\n//     correctGuess = true;\n//     break; // stops an infinite loop \n//   }  \n// }\n// if (correctGuess){ \n// document.write('<h1>You guessed the number!</h1>');\n// document.write('It took you ' + guessCount + ' tries to guess the number ' + randomNumber);\n// } else {\n//     document.write(\"you suck\");\n// }\n\n\n//----------------------------------------------------------------------------------------------\n\n\n// The refactor challenge \n\n// DRY -don't repeat yourself \n\n// var html = '';\n// var red;\n// var green;\n// var blue;\n// var rgbColor;\n// var counter = 0;\n\n// while (counter < 10){\n\n// red = Math.floor(Math.random() * 256 );\n// green = Math.floor(Math.random() * 256 );\n// blue = Math.floor(Math.random() * 256 );\n// rgbColor = 'rgb(' + red + ',' + green + ',' + blue + ')';\n// html += '<div style=\"background-color:' + rgbColor + '\"></div>';\n// counter += 1;\n// }\n\n// document.write(html);\n\n// the refactor challenge solution vid - could have used a for loop "},"lineCount":null}},"hash":"64fbf3768d2210a81adfc056e3d81a67","cacheData":{"env":{}}}