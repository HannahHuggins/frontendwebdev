{"version":3,"sources":["js-loops-arrays-obects/scripts-part-three.js"],"names":["student","name","age","alert","person","country","treehouse","skills","prop","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAQA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAGA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AAGA,IAAIA,OAAO,GAAG;AACVC,EAAAA,IAAI,EAAC,MADK;AAEVC,EAAAA,GAAG,EAAC;AAFM,CAAd;;AAMA,KAAI,IAAIA,GAAR,IAAeF,OAAf,EAAuB;AACnB;AACAG,EAAAA,KAAK,CAACH,OAAO,CAACC,IAAT,CAAL;AACH,EACD;AAEA;AACA;AACA;AAEA;;;AAGA,IAAIG,MAAM,GAAG;AACTH,EAAAA,IAAI,EAAC,OADI;AAETI,EAAAA,OAAO,EAAC,IAFC;AAGTH,EAAAA,GAAG,EAAE,EAHI;AAITI,EAAAA,SAAS,EAAE,IAJF;AAKTC,EAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,KAAP,EAAa,MAAb;AALC,CAAb;;AASA,KAAKC,IAAL,IAAaJ,MAAb,EAAoB;AAChBK,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,IAAlB,EAAwBJ,MAAM,CAACI,IAAD,CAA9B;AACH,EAGD;AACA;AACA","file":"scripts-part-three.51f146be.map","sourceRoot":"..","sourcesContent":["//The Object Literal\n\n\n\n\n\n\n\n//------------------------------------------------------------------\n\n// var student = {\n//     name: 'Dave',\n//     grades: [80, 85, 90]\n// };\n\n\n//key isn't in quotes, acts like a variable name \n\n// var person = {\n//     name : 'Sarah',\n//     country : 'US',\n//     age : 35,\n//     treeHouseStudent : true,\n//     skills : ['JavaScript', 'HTML']\n// };\n\n//------------------------------------------------------------------\n\n//Accessing object properties\n\n//arrays use an index number to access the value, objects use keys\n\n// var person = {\n//     name: 'Dave',\n//     age: 24\n// };\n\n// alert(person['name']);\n// provide the propertys name as a string\n\n//can also use dot notation, easier \n\n// alert(person.name);\n\n\n// to change the name of the person object, you just assign a new value \n\n// person.name = 'Bobby';\n\n// alert(person.name);\n\n// person.country = 'Brazil';\n\n// alert(person.country);\n\n// var person = {\n//     name: 'sarah',\n//     country: 'us',\n//     age: 35,\n//     treehouse: true,\n//     skills : ['javascript', 'html', 'css']\n// };\n\n// the object has 5 properties \n\n// function print(message){\n//     var div = document.getElementById('ouput');\n//     div.innerHTML = message;\n// }\n\n// var message = 'hello my name is ' + person.name;\n// message += 'i live in the ' + person.country;\n// person.name = 'rainbow dash';\n// message += 'but i really wish my name was ' + person.name;\n// person.age += 1;\n// message += 'my age is now ' + person.age;\n// message += 'i have ' + person.skills.length + ' skills: ';\n// message += person.skills.join(', ');\n// alert(message);\n\n//------------------------------------------------------------------\n\n//Using `for in` to Loop Through an Object's Properties\n\n// lot of similarities between arrays and objects \n\n// because array value has a numeric index, for loops are an easy way to\n// access each item in the array \n\n// you can access each value in an object using a for-in loop. (only applies to objects).\n\n// loops through each key (property name) in the object. \n\n\nvar student = {\n    name:'dave',\n    age:25\n};\n\n\nfor(var age in student){\n    //do something \n    alert(student.name);\n}\n// for each key in student, do something \n\n//for - the loop \n//var - the variable (key name)\n// in - in the object \n\n// access property in the for in loop using brackets, can't use dot notation \n\n\nvar person = {\n    name:'sarah',\n    country:'us',\n    age: 35,\n    treehouse: true,\n    skills: ['js', 'css','html']\n\n};\n\nfor (prop in person){\n    console.log(prop, ': ', person[prop]);\n}\n\n\n//for - keyword introducing the loop\n//prop acts like a paramete in a function \n//just like a variable, name it whatever you want "]}